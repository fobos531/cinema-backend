{"version":3,"sources":["services/misc.js","components/PrivateRoute.js","components/PrivateRouteAdmin.js","pages/components/copyright.js","services/login.js","services/users.js","pages/login/components/ForgotPasswordDialog.js","pages/login/index.js","store/actions/authActions.js","pages/register/index.js","store/actions/registerActions.js","pages/adminOnly/dashboard/components/Sidebar.js","pages/adminOnly/dashboard/index.js","pages/dashboardUser/components/UserInfoForm.js","store/actions/userActions.js","pages/dashboardUser/index.js","pages/layout/Navbar/index.js","services/cinemas.js","store/actions/cinemaActions.js","pages/adminOnly/dashboard/components/CinemaCard.js","pages/adminOnly/dashboard/components/Title.js","pages/adminOnly/dashboard/components/CinemasView.js","pages/adminOnly/dashboard/components/TotalUsers.js","services/movies.js","store/actions/movieActions.js","services/reservations.js","store/actions/reservationsActions.js","pages/adminOnly/dashboard/components/MainView.js","pages/adminOnly/dashboard/components/MovieCard.js","pages/adminOnly/dashboard/components/MoviesView.js","pages/homePage/HomePage.js","services/screeningTime.js","store/actions/screeningTimeActions.js","pages/adminOnly/dashboard/components/ScreeningTimesTable.js","pages/adminOnly/dashboard/components/ScreeningTimesView.js","pages/adminOnly/dashboard/components/StatisticsView.js","pages/adminOnly/dashboard/components/ReservationsTable.js","pages/adminOnly/dashboard/components/ReservationsView.js","store/actions/reservationProcessActions.js","pages/bookMoviePage/components/BookedReservationDialog.js","components/PaypalButton.js","pages/bookMoviePage/components/SeatsView.js","pages/bookMoviePage/components/BookMovieForm.js","pages/bookMoviePage/components/ReservationSelectionInfo.js","pages/bookMoviePage/index.js","pages/moviesPage/index.js","pages/MyReservationsPage/components/ReservationsTable.js","pages/MyReservationsPage/index.js","App.js","store/reducers/authReducer.js","store/reducers/cinemaReducer.js","store/reducers/movieReducer.js","store/reducers/screeningTimeReducer.js","store/reducers/reservationProcessReducer.js","store/reducers/reservationReducer.js","store/reducers/chatReducer.js","store/reducers/combinedReducer.js","store/index.js","index.js"],"names":["config","headers","localStorage","getItem","getAllSeatsByScreeningTimeId","id","a","url","axios","get","response","data","getCinemaTicketPrice","ticketPrice","verifyToken","verifyTokenAdmin","PrivateRoute","Component","component","rest","useState","isAuthenticated","setIsAuthenticated","isBusy","setIsBusy","useEffect","miscService","then","authenticated","catch","error","render","props","to","PrivateRouteAdmin","console","log","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","loginData","post","register","newUser","userToAdd","email","username","password","name","firstName","lastName","totalUsers","updateUser","updatedUserDetails","put","resetPassword","patch","Alert","elevation","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","palette","grey","children","classes","onClose","other","disableTypography","className","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","initialValues","recoveryEmail","ForgotPasswordDialog","setForgotPasswordOpened","open","setOpen","handleClose","openSnackbar","setOpenSnackbar","handleCloseSnackbar","event","reason","Dialog","aria-labelledby","dividers","onSubmit","formInfo","resetForm","userService","as","TextField","label","required","fullWidth","autoComplete","Button","type","autoFocus","Snackbar","autoHideDuration","severity","useStyles","makeStyles","height","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","paper","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","LoginForm","dispatch","useDispatch","loggedUser","useSelector","state","authenticationState","history","useHistory","forgotPasswordOpened","Grid","container","CssBaseline","item","xs","sm","md","Paper","square","Avatar","validationSchema","object","string","loginInfo","loginService","payload","loginUser","push","Box","mt","wholePage","RegisterForm","Container","maxWidth","min","max","registerUser","justify","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","Dashboard","setTotalUsers","count","total","fetchData","AppBar","clsx","Toolbar","edge","noWrap","Drawer","Divider","List","pt","saveButton","marginBottom","passwordField","UserInfoForm","fullName","showPassword","formData","setFormData","handleFormChange","target","value","handleSubmit","modifiedUserData","document","getElementById","defaultValue","placeholder","onChange","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","onMouseDown","preventDefault","center","DashboardUser","userState","Object","keys","length","JSON","parse","ul","listStyle","borderBottom","divider","flex","alignSelf","link","linkButton","Navbar","user_type","removeItem","loginButton","addCinema","newCinema","allCinemas","deleteCinema","delete","getCinemas","cinemaService","addNewCinema","cinemaData","cardGrid","card","cardMedia","cardContent","CinemaCard","cinema","Card","CardMedia","CardContent","gutterBottom","postalCode","city","CardActions","Title","fixedHeight","filePicker","CinemaForm","file","setFile","FormData","append","cinemaName","numberOfSeats","acceptedFiles","dropzoneText","files","CinemasView","fixedHeightPaper","cinemaState","lg","cinemas","map","key","depositContext","TotalUsers","addMovie","newMovie","allMovies","moviesRated","deleteMovie","getMovieById","getMovies","movieService","addNewMovie","movieData","selectedMovie","setOccupiedSeats","seats","saveReservation","reservation","allReservations","getReservationsForUser","rateReservation","rating","getReservations","reservationService","MainView","MovieCard","movie","backdropImage","releaseDate","movieName","MoviesView","movieState","movies","fontSize","HomePage","videoId","overlay","playerOptions","showinfo","avgTypingDelay","startDelay","Backspace","delay","addScreeningTime","newScreeningTime","allScreeningTimes","deleteScreeningTime","deleteMany","getScreeningTimes","screeningTimeService","addNewScreeningTime","moment","require","table","minWidth","ScreeningTimesTable","screeningTimes","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","screeningTime","movie_id","cinema_id","datetime_start","format","datetime_end","formControl","selectEmpty","ScreeningTimeForm","setSelectedMovie","selectedCinema","setSelectedCinema","newScrTimeStart","getTime","newScrTimeEnd","overlap","forEach","oldScrTimeStart","oldScrTimeEnd","innerText","screeningTimeData","Select","labelId","MenuItem","ScreeningTimesView","screeningTimeState","screening_times","StatisticsView","movData","setMovData","moviesData","reservations","reservationsState","strokeDasharray","dataKey","fill","ReservationsTable","columns","options","filter","sort","empty","customBodyRenderLite","dataIndex","Rating","ownRating","readOnly","seatsString","seat","seat_name","join","user_id","screeningTime_id","totalPrice","filterType","selectableRows","ReservationsView","getSeatsForSelectedScreeningTime","reservationsService","QRCode","BookedReservationDialog","stringify","finishedReservation","size","bgColor","fgColor","level","includeMargin","renderAs","pngUrl","toDataURL","replace","downloadLink","createElement","download","body","appendChild","click","removeChild","PaypalButton","amount","onSuccess","currency","details","disableCard","clientId","process","styled","compose","cursor","borderRadius","fontWeight","background","row","seatContainer","allSeatsContainer","seatInfoContainer","textAlign","seatInfoLabel","seatInfo","occupiedDisabledSeat","pointerEvents","makeReservationButton","SeatsView","selectedScreeningTime","currentScreeningTime","reservationProcessState","currentReservation","paid","setPaid","reservationObject","dialogDisplayed","setDialogDisplayed","seatsForSelectedScreeningTime","localSeats","setLocalSeats","setFinishedReservation","fetchRequiredData","rowedSeats","oneRow","i","pickedSeats","occupied","seatRow","rowIndex","textContent","seatToToggle","find","setPickedSeats","toggleSeatOccupiedStatus","bgcolor","orderID","seatsToSubmit","initialOpenState","style","BookMovieForm","setSelectedScreeningTime","disabled","formContainer","opacity","backgroundBlendMode","ReservationSelectionInfo","selectedSeats","currentCinemaId","currCinemaTicketPrice","setCurrCinemaTicketPrice","price","innerHTML","Number","filteredSelectedSeats","textTransform","subtitle","summary","ticketsButton","buttonDiv","bookMovieFormContainer","BookMoviePage","selectedMovieId","match","params","randomBackdropImage","toDateString","actors","genre","toLowerCase","fixed","MoviesPage","bgImage","bgImageAlt","strength","downloadOptions","filename","separator","MyReservationsPage","reservationsForUser","loggedUserId","socket","socketIOClient","App","on","message","addResponseMessage","path","senderPlaceHolder","handleNewUserMessage","emit","profileAvatar","initialState","token","authReducer","action","setItem","user","availableCinemas","cinemaReducer","concat","movieReducer","availableScreeningTimes","screeningTimeReducer","reservationProcessReducer","paypalOrderId","reservationReducer","chat_messages","chatReducer","combinedReducer","combineReducers","chatState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.4e8cd1b5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/misc'\n\nlet config = {\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n  }\n}\n\nconst getAllSeatsByScreeningTimeId = async (id) => {\n  const url = (`${baseUrl}/seats/${id}`)\n  const response = await axios.get(url)\n  return response.data\n}\n\nconst getCinemaTicketPrice = async (id) => {\n  const url = (`${baseUrl}/ticketPrice/${id}`)\n  const response = await axios.get(url)\n  return response.data.ticketPrice // u .ticketPrice se nalazi ticket price\n}\n\nconst verifyToken = async () => {\n  const url = (`${baseUrl}/verifyToken`)\n  const response = await axios.get(url, config)\n  return response.data // vraća objekt koji ima boolean property s nazivom \"authenticated\"\n}\n\nconst verifyTokenAdmin = async () => {\n  const url = (`${baseUrl}/verifyTokenAdmin`)\n  const response = await axios.get(url, config)\n  return response.data // vraća objekt koji ima boolean property s nazivom \"authenticated\"\n}\n\nexport default { getAllSeatsByScreeningTimeId, getCinemaTicketPrice, verifyToken, verifyTokenAdmin }","import React, { useState, useEffect } from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\nimport miscService from '../services/misc'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isBusy, setIsBusy] = useState(true)\n  useEffect(() => {\n    miscService.verifyToken().then(response => {\n      if (response.authenticated == true) {\n        setIsAuthenticated(true)\n      }\n      setIsBusy(false)\n    }).catch(error => {\n      setIsBusy(false)\n    })\n  }, []) // do this only once\n  if (isBusy) return null\n  if (isAuthenticated) return (\n    <Route {...rest} render={props => <Component {...props} />} />\n  )\n  else return (\n    <Redirect to=\"/login\" />\n  )\n}\n\nexport default PrivateRoute","import React, { useState, useEffect } from 'react'\nimport { Route, Redirect, useHistory } from \"react-router-dom\"\nimport miscService from '../services/misc'\n\nconst PrivateRouteAdmin = ({ component: Component, ...rest }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  const [isBusy, setIsBusy] = useState(true)\n  useEffect(() => {\n    miscService.verifyTokenAdmin().then(response => {\n      console.log(\"response\", response)\n      setIsAuthenticated(response.authenticated)\n      setIsBusy(false)\n    }).catch(error => {\n      setIsBusy(false)\n    })\n  }, []) // do this only once\n  if (isBusy) return null\n  console.log(\"authenticated:\", isAuthenticated)\n \n  if (isAuthenticated) return (\n    <Route {...rest} render={props => <Component {...props} />} />\n  )\n  if (isAuthenticated == false) {return (<Redirect to=\"/\" />)}\n}\n\nexport default PrivateRouteAdmin","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/fobos531\">\n        Jakov Glavina\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default Copyright","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = (loginData) => {\n  return axios.post(baseUrl, loginData).then(response => response.data).catch(error => error.response.data);\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet config = {\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n  }\n}\n\nconst register = async (newUser) => {\n  const userToAdd = {\n    email: newUser.email,\n    username: newUser.username,\n    password: newUser.password,\n    name: `${newUser.firstName} ${newUser.lastName}`\n  }\n  const response = await axios.post(baseUrl, userToAdd);\n  return response.data;\n}\n\nconst totalUsers = async () => {\n  const response = await axios.get(`${baseUrl}/totalUsers`);\n  return response.data;\n}\n\nconst updateUser = async (updatedUserDetails) => {\n  console.log(updatedUserDetails);\n  const response = await axios.put(baseUrl, updatedUserDetails, config)\n  return response.data\n}\n\nconst resetPassword = async (email) => {\n  const response = await axios.patch(baseUrl, email)\n  return response.data\n}\n\nexport default { register, totalUsers, updateUser, resetPassword }","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, Form, Formik } from 'formik';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport userService from '../../../services/users'\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst initialValues = {\n  recoveryEmail: ''\n}\n\n\nconst ForgotPasswordDialog = ({setForgotPasswordOpened}) => {\n  const [open, setOpen] = useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    setForgotPasswordOpened(false)\n  };\n  const handleResetPassword = () => {\n\n  }\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const handleCloseSnackbar = (event, reason) => {\n    setOpenSnackbar(false); \n  };\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Forgot your password?\n        </DialogTitle>\n        <DialogContent dividers>\n          <Formik initialValues={initialValues} onSubmit={ (formInfo, {resetForm}) => {\n            console.log(formInfo)\n            userService.resetPassword(formInfo).then(response => {\n              setOpenSnackbar(true)\n              \n            })\n            resetForm(initialValues)\n          }}>\n            <Form>\n              <Field name=\"recoveryEmail\" as={TextField} label=\"Recovery email\" variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"recoveryEmail\"\n                autoComplete=\"recoveryEmail\"\n               // onChange={(event) => handleFormChange(event)}\n              />\n              <Button type=\"submit\" onClick={handleResetPassword} color=\"primary\">\n                Reset my password\n              </Button>\n            </Form>\n          </Formik>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar open={openSnackbar} autoHideDuration={4000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"info\">\n          Your password has been reset! Please check your email for more details.\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default ForgotPasswordDialog","import React, { useState }from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport Copyright from '../components/copyright'\nimport loginService from '../../services/login'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { loginUser } from '../../store/actions/authActions'\nimport ForgotPasswordDialog from './components/ForgotPasswordDialog'\nimport { Redirect } from \"react-router-dom\"\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/featured/?cinema)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: '100%',\n  },\n}));\n\n\nconst initialValues = {\n  email: '',\n  password: ''\n}\n\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const loggedUser = useSelector(state => state.authenticationState.loggedUser)\n \n  const [open, setOpen] = useState(false);\n  const handleClose = (event, reason) => {\n    setOpen(false); \n  };\n  const history = useHistory()\n  const [forgotPasswordOpened, setForgotPasswordOpened] = useState(false)\n  if (loggedUser != null) {\n    return <Redirect to=\"/\" />\n  }\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Formik validationSchema={\n            object({\n              email: string().required('You have to enter an e-mail!'),\n              password: string().required('You have to enter a password!'),\n            })\n          }\n            initialValues={initialValues} onSubmit={ (loginInfo) => {\n              loginService.login(loginInfo).then(response => {\n                if (response.error) {\n                  setOpen(true)\n                } else { // korisnik se uspješno logirao\n                  dispatch(loginUser(loginInfo))\n                  history.push(\"/\")\n                }\n              });\n            }}>\n            <Form className={classes.form}>\n              <Field name=\"email\" as={TextField} label=\"E-mail\" variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                autoComplete=\"email\"\n              />\n              <ErrorMessage name=\"email\" />\n              <Field name=\"password\" as={TextField} label=\"Password\" variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <ErrorMessage name=\"password\" /><br></br>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n            </Form>\n\n          </Formik>\n          <Grid container>\n            <Grid item xs>\n              <Button onClick={() => setForgotPasswordOpened(true)} variant=\"body2\">\n                Forgot password?\n              </Button>\n            </Grid>\n            {forgotPasswordOpened && <ForgotPasswordDialog open={true} setForgotPasswordOpened={setForgotPasswordOpened} />}\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up Here!\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n          <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n              Invalid email or password! Please check your input.\n            </Alert>\n          </Snackbar>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default LoginForm","import loginService from '../../services/login'\n\nexport const loginUser = (loginInfo) => {\n  return async dispatch => {\n    const response = await loginService.login(loginInfo);\n    console.log(response)\n    if (response.error) { // failed login\n      dispatch({ type: 'LOGIN_FAIL', payload: response });\n    } else {\n      // successfully logged in\n      dispatch({ type: 'LOGIN_SUCCESS', payload: response });\n    }\n  }\n}\n\nexport const setActiveUser = (user) => {\n  return {\n    type: 'SET_ACTIVE_USER',\n    payload: user\n  }\n}\n\nexport const logout = () => {\n  return {\n    type: 'LOGOUT',\n  }\n}\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Copyright from '../components/copyright'\nimport { registerUser } from '../../store/actions/registerActions'\nimport { Redirect } from \"react-router-dom\"\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  wholePage: {\n    backgroundImage: `url(https://source.unsplash.com/featured/?cinema)`,\n    backgroundSize: 'cover',\n    width: '100vw',\n    height: '100vh',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  username: '',\n  email: '',\n  password: ''\n}\n\n\n\nconst RegisterForm = () => {\n  const loggedUser = useSelector(state => state.authenticationState.loggedUser)\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const handleClose = (event, reason) => {\n    setOpen(false); \n  };\n  if (loggedUser != null) {\n    return <Redirect to=\"/\" />\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" classes={classes.wholePage}>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Formik validationSchema={\n          object({\n            firstName: string().required('Please enter your first name!'),\n            lastName: string().required('Please enter your last name!'),\n            username: string().required('Please enter a desired username!'),\n            email: string().required('Please enter your email!').email(\"You have to enter a valid email!\"),\n            password: string().required('Password is required!').min(4, \"Password must be min 4 characters long!\").max(30, \"Password must be max 30 characters long!\"),\n          })}\n          initialValues={initialValues} onSubmit={(newUser, {resetForm}) => {\n            resetForm(initialValues) // reset form with initial values\n            dispatch(registerUser(newUser))\n            setOpen(true)\n            \n          }}\n        >\n          <Form className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Field name=\"firstName\" as={TextField}\n                  autoComplete=\"fname\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                />\n                <ErrorMessage name=\"firstName\" />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Field name=\"lastName\" as={TextField}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  autoComplete=\"lname\"\n                />\n                <ErrorMessage name=\"lastName\" />\n              </Grid>\n              <Grid item xs={12}>\n                <Field name=\"username\" as={TextField}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  autoComplete=\"username\"\n                />\n                <ErrorMessage name=\"username\" />\n              </Grid>\n              <Grid item xs={12}>\n                <Field name=\"email\" as={TextField}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  autoComplete=\"email\"\n                />\n                <ErrorMessage name=\"email\" />\n              </Grid>\n              <Grid item xs={12}>\n                <Field name=\"password\" as={TextField}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <ErrorMessage name=\"password\" />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Sucessfully registered! You may now log in using the button in the top right corner.\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n\nexport default RegisterForm","import userService from '../../services/users'\n\nexport const registerUser = (newUser) => {\n  return async dispatch => {\n    const response = await userService.register(newUser);\n    console.log(response)\n    // successfully registered\n    // dispatch({ type: 'REGISTER_SUCCESS', payload: response });\n  }\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport EventSeatIcon from '@material-ui/icons/EventSeat';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const mainListItems = (\n  <div>\n    <ListItem\n      button\n      component={Link}\n      to=\"/admin/dashboard\"\n    >\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem\n      button\n      component={Link}\n      to=\"/admin/cinemas\"\n    >\n      <ListItemIcon>\n        <TheatersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Cinemas\" />\n    </ListItem>\n    <ListItem\n      button\n      component={Link}\n      to=\"/admin/movies\"\n    >\n      <ListItemIcon>\n        <MovieIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Movies\" />\n    </ListItem>\n    <ListItem\n      button\n      component={Link}\n      to=\"/admin/screeningtimes\"\n    >\n      <ListItemIcon>\n        <TimerIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Screening times\" />\n    </ListItem>\n    <ListItem\n      button\n      component={Link}\n      to=\"/admin/reservations\"\n    >\n      <ListItemIcon>\n        <EventSeatIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reservations\" />\n    </ListItem>\n    <ListItem\n      button\n      component={Link}\n      to=\"/admin/statistics\"\n    >\n      <ListItemIcon>\n        <EqualizerIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Statistics\" />\n    </ListItem>\n  </div>\n);\n\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './components/Sidebar';\nimport Copyright from '../../components/copyright'\nimport userService from '../../../services/users'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    marginTop: '4.5%',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst Dashboard = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [totalUsers, setTotalUsers] = useState(); \n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n      const fetchData = async () => {\n        let count = (await userService.totalUsers()).total;\n        setTotalUsers(count);\n      }\n      fetchData()\n  }, [])\n  console.log(totalUsers)\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {/* This is where the main stuff in the dashboard is displayed */}\n        <Container maxWidth=\"lg\" className={classes.container}>\n          { /* Tu slozi conditional prikazivanje pojedinih tabova */ }\n           {props.children}\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField, Button, OutlinedInput, Input, makeStyles } from '@material-ui/core';\nimport { saveUserChanges } from '../../../store/actions/userActions'\nimport { useDispatch } from 'react-redux'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '35%', \n    margin: theme.spacing(2),\n  },\n  saveButton: {\n    marginBottom: theme.spacing(2)\n  },\n  passwordField: {\n    width: '100%'\n  }\n  \n}));\n\nconst UserInfoForm = ({ loggedUser }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  console.log(loggedUser)\n  const [open, setOpen] = useState(false)\n  const handleClose = (event, reason) => {\n    setOpen(false); \n  };\n  const [formData, setFormData] = useState({fullName: loggedUser.name, email: loggedUser.email, showPassword: false });\n  const handleFormChange = event => {\n    setFormData({ ...formData, [event.target.id]: event.target.value })\n    console.log(formData)\n  }\n  const handleSubmit = () => {\n    let modifiedUserData = {}  \n    modifiedUserData = {...formData, id: loggedUser.id}\n    console.log(modifiedUserData)\n    dispatch(saveUserChanges(modifiedUserData))\n    document.getElementById(\"fullName\").value = ''\n    document.getElementById(\"email\").value = ''\n    document.getElementById(\"password\").value = ''\n    setOpen(true)\n  }\n  const handleClickShowPassword = () => {\n    setFormData({ ...formData, showPassword: !formData.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <>\n    <Formik>\n      <Form className={classes.form}>\n        <Field as={TextField} \n          label=\"Name\" variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          defaultValue={loggedUser.name}\n          id=\"fullName\"\n          placeholder=\"new name\"\n          autoComplete=\"fullName\"\n          onChange={(event) => handleFormChange(event)}\n        />\n        <Field as={TextField}\n          label=\"E-mail\" variant=\"outlined\"\n          margin=\"normal\"\n          defaultValue={loggedUser.email}\n          fullWidth\n          id=\"email\"\n          placeholder=\"new e-mail\"\n          autoComplete=\"email\"\n          onChange={(event) => handleFormChange(event)}\n        />\n        <FormControl variant=\"outlined\" className={classes.passwordField}>\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\n          <Field as={OutlinedInput}\n            id=\"password\"\n            label=\"Password\"\n            placeholder=\"new password\"\n            type={formData.showPassword ? 'text' : 'password'}\n            onChange={(event) => handleFormChange(event)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {formData.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl><br></br><br></br>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => handleSubmit()} className={classes.saveButton}>\n          Save changes\n        </Button>\n      </Form>\n    </Formik>\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Password sucessfully changed!\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default UserInfoForm","import userService from '../../services/users'\n\nexport const saveUserChanges = (updatedUserDetails) => {\n  return async dispatch => {\n    const response = await userService.updateUser(updatedUserDetails);\n//    dispatch({ type: 'UPDATE_USER_DETAILS', payload: response}) ova linija nis ne dela\n  }\n}\n\n\n\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfoForm from './components/UserInfoForm'\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    display: 'block'\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n}));\n\nconst DashboardUser = () => {\n  const classes = useStyles();\n  let userState = useSelector(state => state.authenticationState.loggedUser)\n  if (Object.keys(userState).length === 0) { //if empty object\n    if(JSON.parse(localStorage.getItem('loggedUser'))) { //ako imamo u local storageu\n      userState = JSON.parse(localStorage.getItem('loggedUser'))\n    }\n  }\n\n  return (\n    <div className={classes.center}>\n      <h1 className={classes.title}>\n        Hi, {userState.name}!\n      </h1><br></br>\n      <UserInfoForm loggedUser={userState} className={classes.UserInfoForm} />\n    </div>\n  )\n}\n\nexport default DashboardUser","import React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setActiveUser, logout } from '../../../store/actions/authActions'\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    flex: 1,\n    flexDirection: 'row',\n  },\n  toolbar: {\n    width: '100%',\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  link: {\n    margin: theme.spacing(1),\n  },\n  linkButton: {\n    alignSelf: 'flex-end'\n  }\n}));\n\nconst Navbar = () => {\n  const dispatch = useDispatch()\n  const history = useHistory();\n  //prvo probaj dohvatit usera iz state-a, ak ga nema tu, onda ga dohvati iz local storage\n  let userState = useSelector(state => state.authenticationState.loggedUser)\n  if (userState == null) { //if empty object\n    if (JSON.parse(localStorage.getItem('loggedUser'))) { //ako imamo u local storageu\n      //     userState = JSON.parse(localStorage.getItem('loggedUser'))\n      dispatch(setActiveUser(JSON.parse(localStorage.getItem('loggedUser'))))\n    }\n  }\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <nav>\n            <RouterLink component={Link} variant=\"button\" color=\"textPrimary\" to=\"/\" className={classes.link}>\n              Home\n            </RouterLink>\n            <RouterLink component={Link} variant=\"button\" color=\"textPrimary\" to=\"/movies\" className={classes.link}>\n              Movies\n            </RouterLink>\n            {userState != null &&\n              <RouterLink component={Link} variant=\"button\" color=\"textPrimary\" to=\"/user/reservations\" className={classes.link}>\n                My reservations\n              </RouterLink>\n            }\n            {userState != null &&\n              <RouterLink component={Link} variant=\"button\" color=\"textPrimary\" to=\"/user/dashboard\" className={classes.link}>\n                Settings\n              </RouterLink>\n            }\n            {userState != null && userState.user_type == \"administrator\" &&\n              <RouterLink component={Link} variant=\"button\" color=\"textPrimary\" to=\"/admin/dashboard\" className={classes.link}>\n                Admin dashboard\n            </RouterLink>}\n\n          </nav>\n        </Toolbar>\n        {userState != null && <Button component={Button} variant=\"outlined\" color=\"primary\" onClick={() => {\n          localStorage.removeItem('loggedUser')\n          localStorage.removeItem('userToken')\n          dispatch(logout())\n          history.push('/')\n        }}\n          className={`${classes.link} ${classes.loginButton}`}\n        >\n          Logout\n        </Button> }\n        {userState == null &&\n          <>\n            <RouterLink component={Button} variant=\"outlined\" color=\"primary\" to=\"/login\" className={`${classes.link} ${classes.loginButton}`}>\n              Login\n            </RouterLink>\n            <RouterLink component={Button} variant=\"outlined\" color=\"primary\" to=\"/register\" className={`${classes.link} ${classes.loginButton}`}>\n              Register\n            </RouterLink>\n          </>\n        }\n      </AppBar>\n    </>\n  );\n}\nexport default Navbar","import axios from 'axios'\nconst baseUrl = '/api/cinemas'\n\nconst addCinema = async (newCinema) => {\n  console.log(newCinema)\n  let config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n    }\n  }\n  const response = await axios.post(baseUrl, newCinema, config)\n  return response.data;\n}\n\nconst allCinemas = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\n\n\nconst deleteCinema = async (id) => {\n  let config = {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n    }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\nexport default { addCinema, allCinemas, deleteCinema }","import cinemaService from '../../services/cinemas'\n\nexport const getCinemas = () => {\n  return async dispatch => {\n    const response = await cinemaService.allCinemas();\n    dispatch({ type: 'GET_CINEMAS', payload: response})\n  }\n}\n\n// ovo se trenutni nigdje ne koristi\n/* export const getAvailableCinemas = () => {\n  return async dispatch => {\n    const response = await cinemaService.getAvailableCinemas()\n  }\n} */\n\nexport const addNewCinema = (cinemaData) => {\n  return async dispatch => {\n    const response = await cinemaService.addCinema(cinemaData);\n    dispatch({type: 'ADD_NEW_CINEMA', payload: response})\n  }\n}\n\nexport const deleteCinema = (id) => {\n  return async dispatch => {\n    await cinemaService.deleteCinema(id)\n    dispatch(getCinemas())\n  }\n}\n\n\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { deleteCinema } from '../../../../store/actions/cinemaActions'\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '30.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}))\n\nconst CinemaCard = ({ cinema }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles()\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image={`${cinema.image}`}\n        title=\"Cinema image\"\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {`${cinema.name}`}\n        </Typography>\n        <Typography>\n          {`${cinema.postalCode}, ${cinema.city}`}\n        </Typography>\n        <IconButton onClick={() => dispatch(deleteCinema(cinema.id))}>\n          <DeleteIcon />\n        </IconButton>\n      </CardContent>\n      <CardActions>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default CinemaCard","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = (props) => {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nexport default Title","// Cinemas view ima sljedeće mogućnosti\n\n// prvo bu forma za dodavanje novog cinema, dodaje se ime, grad, postal code i slika\n// IMPLEMENTIRANO\n\n\n// ispod toga je  popis svih kina po 3 u jednom redu -> IMPLEMENTIRANO\n\n// search - mozda\n// edit i delete slozi (delete je bitnije)\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Field, Form, Formik } from 'formik';\nimport CinemaCard from './CinemaCard';\nimport Title from './Title'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCinemas, addNewCinema } from '../../../../store/actions/cinemaActions'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  Paper: {\n    height: 'fit-content'\n  },\n  filePicker: {\n    height: '50%'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: '100%',\n  },\n}));\n\n\n\nconst CinemaForm = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [file, setFile] = useState()\n  const [formData, setFormData] = useState({});\n  const handleFormChange = event => {\n    setFormData({ ...formData, [event.target.id]: event.target.value })\n    console.log(formData)\n  }\n  const handleSubmit = async () => {\n    const cinemaData = new FormData();\n    cinemaData.append('cinemaName', formData.cinemaName)\n    cinemaData.append('city', formData.city)\n    cinemaData.append('postalCode', formData.postalCode)\n    cinemaData.append('numberOfSeats', formData.numberOfSeats)\n    cinemaData.append('ticketPrice', formData.ticketPrice)\n    cinemaData.append('image', file)\n    dispatch(addNewCinema(cinemaData))\n    document.getElementById(\"cinemaName\").value = ''\n    document.getElementById(\"numberOfSeats\").value = ''\n    document.getElementById(\"ticketPrice\").value = ''\n    document.getElementById(\"city\").value = ''\n    document.getElementById(\"postalCode\").value = ''\n  }\n  return (\n    <>\n     <Title>\n       ADD NEW CINEMA\n     </Title>\n      <Formik>\n        <Form className={classes.form}>\n          <Field name=\"cinemaName\" as={TextField} label=\"Cinema name\" variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cinemaName\"\n            autoComplete=\"cinemaName\"\n            onChange={(event) => handleFormChange(event)}\n          />\n          <Field name=\"numberOfSeats\" as={TextField} label=\"No. of seats\" variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"numberOfSeats\"\n            autoComplete=\"numberOfSeats\"\n            onChange={(event) => handleFormChange(event)}\n          />\n          <Field name=\"ticketPrice\" as={TextField} label=\"Ticket price per seat\" variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"ticketPrice\"\n            autoComplete=\"ticketPrice\"\n            onChange={(event) => handleFormChange(event)}\n          />\n          <Field name=\"city\" as={TextField} label=\"City\" variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"city\"\n            autoComplete=\"city\"\n            onChange={(event) => handleFormChange(event)}\n          />\n          <Field name=\"postalCode\" as={TextField} label=\"Postal code\" variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"postalCode\"\n            autoComplete=\"postalCode\"\n            onChange={(event) => handleFormChange(event)}\n          />\n          <DropzoneArea\n            acceptedFiles={['image/*']}\n            dropzoneText={\"Drag and drop an image here or click\"}\n            onChange={(files) => setFile(files[0])}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => {\n              handleSubmit()\n            }}\n          >\n            Add cinema\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  )\n}\n\n\n// fetchaj sve cinema-e\n\n\nconst CinemasView = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let cinemaState = useSelector(state => state.cinemaState)\n  useEffect(() => {\n    dispatch(getCinemas())\n  }, []) // load cinemas \n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={12} lg={12}>\n        {/* U ovom prikazu je forma za dodavanje novog cinema */}\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n          <CinemaForm />\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={12} lg={12}>\n        {/* U ovom prikazu je prikaz svih kina */}\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n          {cinemaState.cinemas.map(cinema => \n              <CinemaCard key={cinema.id} cinema={cinema} />\n          )}\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\n export default CinemasView\n/* \nconst mapStateToProps = state => ({\n  cinemas: state.cinemaState.cinemas\n});\n\nexport default connect(mapStateToProps)(CinemasView); */","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nconst TotalUsers = ({ count }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Title>Total users</Title>\n      <Typography component=\"p\" variant=\"h5\">\n         {count} users\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        since 10 July, 2020\n      </Typography>\n    </>\n  );\n}\nexport default TotalUsers","import axios from 'axios'\nconst baseUrl = '/api/movies'\n\nconst addMovie = async (newMovie) => {\n  console.log(newMovie)\n  let config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Authorization': `Bearer ${localStorage.getItem('userToken')}`,\n    }\n  }\n  const response = await axios.post(baseUrl, newMovie, config)\n  return response.data;\n}\n\nconst allMovies = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\nconst moviesRated = async () => {\n  let config = {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('userToken')}`,\n    }\n  }\n  const response = await axios.get(`${baseUrl}/moviesRated`, config)\n  return response.data; \n}\n\nconst deleteMovie = async (id) => {\n  let config = {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('userToken')}`,\n    }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\nconst getMovieById = async (id) => {\n  console.log(`${baseUrl}/${id}`)\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { addMovie, allMovies, deleteMovie, getMovieById, moviesRated }","import movieService from '../../services/movies'\n\nexport const getMovies = () => {\n  return async dispatch => {\n    const response = await movieService.allMovies();\n    dispatch({ type: 'GET_MOVIES', payload: response})\n  }\n}\n\nexport const addNewMovie = (movieData) => {\n  return async dispatch => {\n    const response = await movieService.addMovie(movieData);\n    dispatch({ type: 'ADD_NEW_MOVIE', payload: response})\n  }\n}\n\nexport const deleteMovie = (id) => {\n  return async dispatch => {\n    await movieService.deleteMovie(id)\n    dispatch(getMovies())\n  }\n}\n\n\nexport const getMovieById = (id) => {\n  return async dispatch => {\n    const selectedMovie = await movieService.getMovieById(id)\n    dispatch({ type: 'GET_MOVIE_BY_ID', payload: selectedMovie })\n  }\n}\n","import axios from 'axios'\nconst baseUrl = '/api/reservations'\n\nlet config = {\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n  }\n}\n\nconst setOccupiedSeats = async (id, seats) => { //by cinema id\n  const url = (`${baseUrl}/screeningTime/${id}`)\n  console.log(url, seats)\n  const response = await axios.patch(url, seats, config)\n  return response.data\n}\n\nconst saveReservation = async (reservation) => {\n  console.log(reservation)\n  const response = await axios.post(baseUrl, reservation, config)\n  console.log(\"response\", response.data)\n  return response.data\n}\n\nconst allReservations = async () => {\n  const response = await axios.get(baseUrl, config)\n  return response.data; \n}\n\nconst getReservationsForUser = async (id) => {\n  console.log(`${baseUrl}/${id}`)\n  const response = await axios.get(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst rateReservation = async (id, rating) => {\n  const response = await axios.patch(`${baseUrl}/rate/${id}`, rating, config)\n  return response.data;\n}\n\nexport default { setOccupiedSeats, saveReservation, allReservations, getReservationsForUser, rateReservation }","import reservationService from '../../services/reservations'\n\nexport const getReservations = () => {\n  return async dispatch => {\n    const response = await reservationService.allReservations();\n    dispatch({ type: 'GET_RESERVATIONS', payload: response})\n  }\n}\n\nexport const getReservationsForUser = (id) => {\n  return async dispatch => {\n    const response = await reservationService.getReservationsForUser(id);\n    dispatch({ type: 'GET_RESERVATIONS_FOR_USER', payload: response})\n  }\n}\n\nexport const rateReservation = (id, rating) => {\n  return async dispatch => {\n    const response = await reservationService.rateReservation(id, {rating: rating});\n    dispatch({ type: 'RATE_RESERVATION', payload: response})\n  }\n}","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport TotalUsers from './TotalUsers'\nimport userService from '../../../../services/users'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCinemas } from '../../../../store/actions/cinemaActions'\nimport { getMovies } from '../../../../store/actions/movieActions'\nimport { getReservations } from '../../../../store/actions/reservationsActions'\nimport Title from './Title'\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst MainView = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={3}>\n\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h2\" component=\"h2\">\n            Welcome back, {JSON.parse(localStorage.getItem('loggedUser')).name}!\n          </Typography>\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default MainView","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { deleteMovie } from '../../../../store/actions/movieActions'\nimport { useDispatch } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '30.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}))\n\nconst MovieCard = ({ movie }) => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image={`${movie.backdropImage}`}\n        title=\"Movie image\"\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {`${movie.title}`}\n        </Typography>\n        <Typography>\n          {`${new Date(movie.releaseDate).getFullYear()}`}\n        </Typography>\n        <IconButton onClick={() => dispatch(deleteMovie(movie.id))}>\n          <DeleteIcon />\n        </IconButton>\n      </CardContent>\n      <CardActions>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default MovieCard","// Movie forma funkcionira na nacin da upisem ime filma. Napravil bum API request prema OMDB API-u i zel si one podatke koji mi trebaju za bazu.\n// Osim IMDB id filma, v movie formu ide i slika koja se bude koristila kak cover art na drugim stranicama\n\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Field, Form, Formik } from 'formik';\nimport Title from './Title'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getMovies, addNewMovie } from '../../../../store/actions/movieActions'\nimport MovieCard from './MovieCard'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  Paper: {\n    height: 'fit-content'\n  },\n  filePicker: {\n    height: '50%'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: '100%',\n  },\n}));\n\n\n\nconst CinemaForm = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [file, setFile] = useState()\n  const [formData, setFormData] = useState({});\n  const handleFormChange = event => {\n    setFormData({ ...formData, [event.target.id]: event.target.value })\n    console.log(formData)\n  }\n  const handleSubmit = async () => {\n    const movieData = new FormData();\n    movieData.append('movieName', formData.movieName)\n    movieData.append('moviePoster', file)\n    dispatch(addNewMovie(movieData))\n    document.getElementById(\"movieName\").value = '';\n  }\n  return (\n    <>\n     <Title>\n       ADD NEW MOVIE\n     </Title>\n      <Formik>\n        <Form className={classes.form}>\n          <Field name=\"movieName\" as={TextField} label=\"Movie name\" variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"movieName\"\n            autoComplete=\"movieName\"\n            onChange={(event) => handleFormChange(event)}\n          />\n          <DropzoneArea\n            acceptedFiles={['image/*']}\n            dropzoneText={\"Drag and drop movie poster here or click\"}\n            onChange={(files) => setFile(files[0])}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => {\n              handleSubmit()\n            }}\n          >\n            Add movie\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  )\n}\n\n\n// fetchaj sve cinema-e\n\n\nconst MoviesView = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let movieState = useSelector(state => state.movieState)\n  useEffect(() => {\n    dispatch(getMovies())\n  }, []) // load movies once\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={12} lg={12}>\n        {/* U ovom prikazu je forma za dodavanje novog cinema */}\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n          <CinemaForm />\n        </Paper>\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n        {movieState.movies && movieState.movies.map(movie => \n              <MovieCard key={movie.id} movie={movie} />\n        )}\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\n\nexport default MoviesView","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typist from 'react-typist'\nimport YoutubeBackground from 'react-youtube-background'\n\n\nconst useStyles = makeStyles((theme) => ({\n  wholePage: {\n  //  backgroundColor: `#333333`,\n    width: '100vw',\n    height: '100vh',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '5em',\n  },  \n}));\n\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  return (\n    <YoutubeBackground\n    videoId=\"cySqH7j6RlI\"\n    overlay=\"rgba(0,0,0,.85)\"\n    className={classes.wholePage}\n    playerOptions={{showinfo:0}}\n    >\n    <Typist\n      avgTypingDelay={60}\n      startDelay={1000}\n      \n    >\n      <span>Welcome to our Cinema!</span>\n      <Typist.Backspace count={22} delay={200} />\n      <span>Start by clicking the \"Movies\" tab above.</span>\n      <Typist.Backspace count={71} />\n      <span>Enjoy your stay!</span>\n    </Typist>\n    </YoutubeBackground>\n  )\n}\n\nexport default HomePage","import axios from 'axios'\nconst baseUrl = '/api/screeningtimes'\n\nlet config = {\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('userToken')}`\n  }\n}\n\nconst addScreeningTime = async (newScreeningTime) => {\n  console.log(newScreeningTime)\n  await axios.post(baseUrl, newScreeningTime, config)\n}\n\nconst allScreeningTimes = async () => {\n  const response = await axios.get(baseUrl, config)\n  return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\nconst deleteScreeningTime = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\nconst deleteMany = async () => {\n  const response = await axios.get(`${baseUrl}/deleteMany`, config)\n // return response.data; // array objekata od kojih svaki predstavlja jedno kino\n}\n\nexport default { addScreeningTime, allScreeningTimes, deleteScreeningTime, deleteMany }","import screeningTimeService from '../../services/screeningTime'\n\nexport const getScreeningTimes = () => {\n  return async dispatch => {\n    const response = await screeningTimeService.allScreeningTimes();\n    dispatch({ type: 'GET_SCREENING_TIMES', payload: response})\n  }\n}\n\nexport const addNewScreeningTime = (newScreeningTime) => {\n  return async dispatch => {\n    console.log(newScreeningTime)\n    await screeningTimeService.addScreeningTime(newScreeningTime);\n    dispatch(getScreeningTimes())\n  }\n}\n\nexport const deleteScreeningTime = (id) => {\n  return async dispatch => {\n    await screeningTimeService.deleteScreeningTime(id)\n    dispatch(getScreeningTimes())\n  }\n}\n\n\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch } from 'react-redux'\nimport { IconButton } from '@material-ui/core';\nimport { deleteScreeningTime } from '../../../../store/actions/screeningTimeActions';\nconst moment = require('moment')\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst ScreeningTimesTable = ({ screeningTimes }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Movie</TableCell>\n            <TableCell align=\"right\">Cinema</TableCell>\n            <TableCell align=\"right\">Start time</TableCell>\n            <TableCell align=\"right\">End time</TableCell>\n            <TableCell align=\"right\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {screeningTimes.map((screeningTime) => (\n            <TableRow key={screeningTime.id}>\n              <TableCell align=\"left\">{screeningTime.movie_id.title}</TableCell>\n              <TableCell align=\"right\">{screeningTime.cinema_id.name}</TableCell>\n              <TableCell align=\"right\">{moment(screeningTime.datetime_start).format('MMMM Do YYYY, HH:mm')}</TableCell>\n              <TableCell align=\"right\">{moment(screeningTime.datetime_end).format('MMMM Do YYYY, HH:mm')}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton onClick={() => dispatch(deleteScreeningTime(screeningTime.id))}>\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default ScreeningTimesTable","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport Title from './Title'\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { getScreeningTimes, addNewScreeningTime } from '../../../../store/actions/screeningTimeActions'\nimport { getCinemas } from '../../../../store/actions/cinemaActions'\nimport { getMovies } from '../../../../store/actions/movieActions'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ScreeningTimesTable from './ScreeningTimesTable'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  Paper: {\n    height: 'fit-content'\n  },\n  filePicker: {\n    height: '50%'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst ScreeningTimeForm = ({ screeningTimes, setOpen }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(getCinemas())\n    dispatch(getMovies())\n  }, [])\n  // Za alert\n\n  const movieState = useSelector(state => state.movieState)\n  const cinemaState = useSelector(state => state.cinemaState)\n  const [selectedMovie, setSelectedMovie] = useState('')\n  const [selectedCinema, setSelectedCinema] = useState('')\n  const [formData, setFormData] = useState({});\n  const handleFormChange = event => {\n    setFormData({ ...formData, [event.target.id]: event.target.value })\n    console.log(formData)\n  }\n  const handleSubmit = async () => {\n    const newScrTimeStart = (new Date(formData.datetime_start)).getTime();\n    const newScrTimeEnd = (new Date(formData.datetime_end)).getTime();\n    // first we need to check if they overlap\n    let overlap = false\n    screeningTimes.forEach(screeningTime => {\n      console.log(screeningTime)\n      const oldScrTimeStart = (new Date(screeningTime.datetime_start)).getTime()\n      const oldScrTimeEnd = (new Date(screeningTime.datetime_end)).getTime()\n      debugger\n      if (screeningTime.cinema_id.name == document.getElementById(\"cinemaSelect\").innerText &&\n        (oldScrTimeStart > newScrTimeStart &&\n          oldScrTimeStart < newScrTimeEnd ||\n          newScrTimeStart > oldScrTimeStart\n          && newScrTimeStart < oldScrTimeEnd)) {\n        overlap = true\n      }\n    })\n    if (overlap) {\n      // prikazi alert\n      setOpen(true)\n    } else {\n      const screeningTimeData = {\n        movie: selectedMovie,\n        cinema: selectedCinema,\n        datetime_start: formData.datetime_start,\n        datetime_end: formData.datetime_end\n      }\n      dispatch(addNewScreeningTime(screeningTimeData))\n    }\n  }\n  const handleMovieChange = (event) => {\n    setSelectedMovie(event.target.value)\n  }\n  const handleCinemaChange = (event) => {\n    setSelectedCinema(event.target.value)\n  }\n  return (\n    <>\n      <Title>\n        ADD NEW SCREENING TIME\n     </Title>\n      <form>\n\n        <FormControl id=\"movieSelector\" className={classes.formControl}>\n          <InputLabel id=\"movieLabel\">Movie</InputLabel>\n          <Select\n            labelId=\"movieLabel\"\n            id=\"movieSelect\"\n            value={selectedMovie}\n            onChange={handleMovieChange}\n          >\n            {movieState.movies.map(movie =>\n              <MenuItem key={movie.id} value={movie.id}>{movie.title}</MenuItem>\n            )}\n          </Select>\n        </FormControl><br></br>\n        <FormControl id=\"cinemaSelector\" className={classes.formControl}>\n          <InputLabel id=\"cinemaLabel\">Cinema</InputLabel>\n          <Select\n            labelId=\"cinemaLabel\"\n            id=\"cinemaSelect\"\n            value={selectedCinema}\n            onChange={handleCinemaChange}\n          >\n            {cinemaState.cinemas.map(cinema =>\n              <MenuItem key={cinema.id} id={cinema.id} value={cinema.id}>{cinema.name}</MenuItem>\n            )}\n          </Select>\n\n        </FormControl>\n        <TextField name=\"datetime_start\" variant=\"outlined\"\n          type=\"datetime-local\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"datetime_start\"\n          autoComplete=\"datetime_start\"\n          onChange={(event) => handleFormChange(event)}\n        />\n        <TextField name=\"datetime_end\" variant=\"outlined\"\n          margin=\"normal\"\n          type=\"datetime-local\"\n          required\n          fullWidth\n          id=\"datetime_end\"\n          autoComplete=\"datetime_end\"\n          onChange={(event) => handleFormChange(event)}\n        />\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            handleSubmit()\n          }}\n        >\n          Add screeening time\n          </Button>\n\n      </form>\n    </>\n  )\n}\n\n\n\n\n\nconst ScreeningTimesView = () => {\n  const dispatch = useDispatch()\n  // za alert\n  const [open, setOpen] = useState(false);\n  const handleClose = (event, reason) => {\n    setOpen(false); \n  };\n  // fetch screening times\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let screeningTimeState = useSelector(state => state.screeningTimeState.screening_times)\n  useEffect(() => {\n    dispatch(getScreeningTimes())\n  }, []) // load cinemas \n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={12} lg={12}>\n        {/* U ovom prikazu je forma za dodavanje novog cinema */}\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n          <ScreeningTimeForm screeningTimes={screeningTimeState} setOpen={setOpen} />\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={12} lg={12}>\n        {/* U ovom prikazu je prikaz svih kina */}\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n          {/* tu bu tablcia s četiri kolone movie_id, cinema, datetime_start, datetime_end */}\n          <ScreeningTimesTable screeningTimes={screeningTimeState} />\n        </Paper>\n        <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n            Screening time overlaps! Please specify another screening time parameters!\n            </Alert>\n          </Snackbar>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default ScreeningTimesView\n","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport TotalUsers from './TotalUsers'\nimport userService from '../../../../services/users'\nimport movieService from '../../../../services/movies'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCinemas } from '../../../../store/actions/cinemaActions'\nimport { getMovies } from '../../../../store/actions/movieActions'\nimport { getReservations } from '../../../../store/actions/reservationsActions'\nimport Title from './Title'\nimport Typography from '@material-ui/core/Typography';\nimport {\n  ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst StatisticsView = () => {\n  const [movData, setMovData] = useState([]);\n  const data = movData;\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [totalUsers, setTotalUsers] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let count = (await userService.totalUsers()).total;\n      const moviesData = await movieService.moviesRated()\n      setMovData(moviesData)\n      setTotalUsers(count);\n      dispatch(getCinemas()) // get all cinemas\n      dispatch(getMovies())\n      dispatch(getReservations())\n    }\n    fetchData()\n  }, [])\n  console.log(\"movie data\", movData)\n  const cinemas = useSelector(state => state.cinemaState.cinemas)\n  const movies = useSelector(state => state.movieState.movies)\n  const reservations = useSelector(state => state.reservationsState.reservations)\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Grid container spacing={3}>\n\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Title>Total cinemas: {cinemas.length}</Title>\n          <Title>Total movies: {movies.length}</Title>\n          <Title>Total reservations: {reservations.length}</Title>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <TotalUsers count={totalUsers} />\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          Ratings of movies\n         \n          <BarChart width={730} height={250} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"title\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"Summed rating\" fill=\"#8884d8\" />\n          </BarChart>\n       \n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default StatisticsView","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MUIDataTable from \"mui-datatables\";\nimport Rating from '@material-ui/lab/Rating';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst ReservationsTable = ({ reservations }) => {\n  const classes = useStyles();\n  const columns = [\"User\", \"Movie\", \"Cinema\", \"Seats\", \"Total price\", {\n    name: \"User rating\",\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: (dataIndex) => {\n        return (\n          <Rating \n            defaultValue={reservations[dataIndex].ownRating ? reservations[dataIndex].ownRating : 0} \n            readOnly={true}\n            max={5}\n            name={reservations[dataIndex].id}\n          />\n        );\n      }\n    }\n  },];\n  const data = []\n  reservations.map(reservation => {\n    let seatsString = reservation.seats.map(seat => seat.seat_name).join(\", \");\n    console.log(reservation)\n    data.push([reservation.user_id.name,reservation.screeningTime_id.movie_id.title,reservation.screeningTime_id.cinema_id.name, seatsString, `$${reservation.totalPrice}`])\n  })\n  console.log(data)\n  const options = {\n    filterType: 'checkbox',\n    selectableRows: false,\n  };\n  return (\n    <MUIDataTable\n      title={\"Reservations\"}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nexport default ReservationsTable","// Movie forma funkcionira na nacin da upisem ime filma. Napravil bum API request prema OMDB API-u i zel si one podatke koji mi trebaju za bazu.\n// Osim IMDB id filma, v movie formu ide i slika koja se bude koristila kak cover art na drugim stranicama\n\n\nimport React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getReservations } from '../../../../store/actions/reservationsActions'\nimport ReservationsTable from './ReservationsTable'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  Paper: {\n    height: 'fit-content'\n  },\n  filePicker: {\n    height: '50%'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n// fetchaj sve movieje\n\nconst ReservationsView = () => {\n  const dispatch = useDispatch()\n  // fetch screening times\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let reservations = useSelector(state => state.reservationsState.reservations)\n  useEffect(() => {\n     dispatch(getReservations())\n  }, []) // load cinemas \n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={12} lg={12}>\n        {/* U ovom prikazu je prikaz svih kina */}\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n        {/* tu bu tablcia s četiri kolone movie_id, cinema, datetime_start, datetime_end */}\n        <ReservationsTable reservations={reservations} />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\n\nexport default ReservationsView","import reservationsService from '../../services/reservations'\nimport miscService from '../../services/misc'\n\nexport const getSeatsForSelectedScreeningTime = (id) => {\n  return async dispatch => {\n    const response = await miscService.getAllSeatsByScreeningTimeId(id);\n    dispatch({ type: 'GET_SEATS_FOR_SELECTED_SCREENING_TIME', payload: response})\n  }\n}\n\nexport const setOccupiedSeats = (id, seats) => {\n  return async dispatch => {\n    const response = await reservationsService.setOccupiedSeats(id, seats)\n    dispatch({ type: 'SET_OCCUPIED_SEATS', payload: response }) \n  }\n}\n\nexport const setPickedSeats = (seats) => {\n  return {\n    type: 'SET_PICKED_SEATS',\n    payload: seats\n  }\n}\n\nexport const setCurrentlySelectedCinema = (cinema) => {\n  return {\n    type: 'SET_SELECTED_CINEMA',\n    payload: cinema,\n  }\n}\n\nexport const setCurrentlySelectedScreeningTime = (screening_time) => {\n  return {\n    type: 'SET_SELECTED_SCREENING_TIME',\n    payload: screening_time,\n  }\n}\n\nexport const setCurrentlySelectedMovie = (movie) => {\n  return {\n    type: 'SET_SELECTED_MOVIE',\n    payload: movie,\n  }\n}\n\nexport const updateTotalPrice = (price) => {\n  console.log(price)\n  return {\n    type: 'UPDATE_TOTAL_PRICE',\n    payload: Number(price),\n  }\n}\n\nexport const setOrderId = (orderId) => {\n  return {\n    type: 'SET_ORDER_ID',\n    payload: orderId,\n  }\n}","import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nlet QRCode = require('qrcode.react')\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst BookedReservationDialog = (props) => {\n  const [open, setOpen] = useState(true);\n  console.log(\"openstate\", open)\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDownload = () => {\n    const canvasQRCode = document.getElementById(\"generatedQRCode\");\n    const pngUrl = canvasQRCode\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"YourReservation.png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Reservation successful! <CheckCircleIcon />  \n        </DialogTitle>\n        <DialogContent dividers>\n          <QRCode id=\"generatedQRCode\" value={JSON.stringify(props.finishedReservation)} size={400} bgColor=\"#FFFFFF\" fgColor=\"#000000\" level=\"H\" includeMargin={true} renderAs=\"canvas\" />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDownload} color=\"primary\">\n            Download QR Code\n          </Button>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default BookedReservationDialog","import React from 'react'\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\nconst PaypalButton = ({ amount, onSuccess, currency }) => {\n  return (\n    <PayPalButton\n      amount={amount}\n      currency={currency}\n      onSuccess={(details, data) => onSuccess(details, data)}\n      disableCard=\"visa\"\n      options={{\n        clientId: process.env.REACT_APP_PAYPAL_CLIENT_ID\n      }}\n    />\n  )\n}\n\nexport default PaypalButton","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport { getSeatsForSelectedScreeningTime,\n         setOccupiedSeats,\n         setPickedSeats,\n         setOrderId, \n} from '../../../store/actions/reservationProcessActions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@material-ui/core/styles';\nimport { compose, spacing, palette } from '@material-ui/system';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from '@material-ui/core';\nimport BookedReservationDialog from './BookedReservationDialog';\nimport reservationService from '../../../services/reservations'\nimport PaypalButton from '../../../components/PaypalButton'\n\n\nconst Box = styled('div')(compose(spacing, palette));\n\n\nconst useStyles = makeStyles(theme => ({\n  seat: {\n    cursor: 'pointer',\n    color: 'rgba(255,255,255,0.7)',\n    borderRadius: 2,\n    fontWeight: 600,\n    '&:hover': {\n      background: 'rgb(120, 205, 4)'\n    },\n    display: 'inline-block',\n    height: '20%',\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  seatContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  allSeatsContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  seatInfoContainer: {\n    width: '100%',\n    margin: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    color: '#eee'\n  },\n  seatInfoLabel: {\n    display: 'inline-block',\n    width: 13,\n    height: 10,\n    padding: '2%'\n  },\n  seatInfo: {\n    margin: '8px',\n  },\n  occupiedDisabledSeat: {\n    pointerEvents: 'none'\n  },\n  makeReservationButton: {\n    display: 'inline-block',\n    whiteSpace: 'no-wrap',\n    margin: '3%'\n  }\n}))\n\nconst SeatsView = ({ selectedScreeningTime }) => {\n  const currentScreeningTime = useSelector(state => state.reservationProcessState.currentReservation.screeningTime_id)\n\n  const dispatch = useDispatch()\n  // did user pay?\n  const [paid, setPaid] = useState(false)\n  // state za cijelu rezervaciju\n  const reservationObject = useSelector(state => state.reservationProcessState.currentReservation)\n  //state za dialog\n  const [dialogDisplayed, setDialogDisplayed] = useState(false)\n  // trebam dohvatiti seatse (globalni state)\n  const seats = useSelector(state => state.reservationProcessState.seatsForSelectedScreeningTime);\n  // ovdje spremam local state za seatse \n  const [localSeats, setLocalSeats] = useState([])\n  const [finishedReservation, setFinishedReservation] = useState(null)\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchRequiredData = async () => {\n      await dispatch(getSeatsForSelectedScreeningTime(selectedScreeningTime))\n    }\n    fetchRequiredData()\n  }, [currentScreeningTime])\n\n  useEffect(() => {\n    if (seats.length != 0) setLocalSeats(seats)\n  }, [seats])\n\n  \n \n  // moram napravit array of arrayova, svaki element outer arraya predstavlja jedan row, a unutar njega imam respective seatse\n  let rowedSeats = [];\n  let oneRow = []\n  for (let i = 0; i < seats.length; i++) {\n    if (i == 0) {\n      oneRow.push(seats[i])\n      continue\n    }\n    if (i % 7 == 0) { // pretpostavljamo da svaki red ima 7 sjedala, nakon 7 sjedala predji u novi red\n      rowedSeats.push(oneRow);\n      oneRow = []\n      oneRow.push(seats[i])\n      continue;\n    }\n    oneRow.push(seats[i]);\n  }\n  if (oneRow != []) rowedSeats.push(oneRow);\n  const toggleSeatOccupiedStatus = (id) => {\n    console.log(document.getElementById(\"totalPrice\").textContent)\n    const seatToToggle = localSeats.find(seat => seat.id == id);\n    if (seatToToggle.occupied == 0) { // postavi status na selected\n      seatToToggle.occupied = 1\n    } else seatToToggle.occupied = 0\n    setLocalSeats(localSeats.map(seat => seat.id == id ? seatToToggle : seat))\n  //  dispatch(updateTotalPrice(document.getElementById(\"totalPrice\").innerHTML))\n\n    dispatch(setPickedSeats(localSeats))\n    // moram i updatati total price u storeu\n  }\n  console.log(\"rowed seats\", rowedSeats)\n  \n  const pickedSeats = localSeats.filter(seat => seat.occupied == 1)\n  console.log(\"picked seats\", pickedSeats)\n  console.log(\"finishedReservation\", finishedReservation)\n  return (\n    <>\n      {/* Renderiranje sjedala */}\n      <Grid container spacing={4} className={classes.allSeatsContainer}>\n        {rowedSeats.length > 0 &&\n          rowedSeats.map((seatRow, rowIndex) => (\n            <Grid key={rowIndex} container item spacing={5} className={classes.row}>\n              {seatRow.map(seat => (\n                <Box\n                  key={`seat-${seat.id}`}\n                  width=\"75%\"\n                  margin={2}\n                  onClick={() => toggleSeatOccupiedStatus(seat.id)}\n                  className={`${classes.seat} ${seat.occupied == 2 ? classes.occupiedDisabledSeat : \"\"}`}\n                  bgcolor={\n                    seat.occupied == 2\n                      ? 'rgb(228, 0, 0)' :\n                      seat.occupied == 1 ?\n                        'rgb(120, 205, 4)' : 'rgb(96, 93, 169)'\n                  }>\n                  {seat.seat_name}\n                </Box>\n              ))}\n\n            </Grid>\n          ))\n        }\n        {!paid && <PaypalButton\n            amount={reservationObject.totalPrice}\n            currency={'USD'}\n            onSuccess={(details, data) => {\n              setPaid(true)\n              // save transaction\n              dispatch(setOrderId(data.orderID))\n            }}\n        />}\n        {paid && <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.makeReservationButton}\n          onClick={ async () => {\n            let seatsToSubmit = localSeats.map(seat => {\n              if (seat.occupied == 1) seat.occupied = 2\n              return seat\n            })\n            dispatch(setOccupiedSeats(selectedScreeningTime, seatsToSubmit))\n            // sad saveaj rezervaciju\n            const reservation = await reservationService.saveReservation({...reservationObject, pickedSeats})\n            setFinishedReservation(reservation)\n            setDialogDisplayed(true)\n          }}\n          >\n          Finish reservation\n        </Button>}\n        \n        {dialogDisplayed && finishedReservation != null && \n          <BookedReservationDialog initialOpenState={true} finishedReservation={finishedReservation} /> \n          } \n      </Grid>\n      {/* Tu dolje morem staviti legendu*/}\n      <Grid container className={classes.seatContainer}>\n          <Grid item className={classes.seatInfo}>\n            <div\n              className={classes.seatInfoLabel}\n              style={{ background: 'rgb(96, 93, 169)' }}></div>\n              Available seat \n          </Grid>\n          <Grid item className={classes.seatInfo}>\n            <div\n              className={classes.seatInfoLabel}\n              style={{ background: 'rgb(228, 0, 0)' }}></div>\n              Occupied Seat\n            </Grid>\n          <Grid className={classes.seatInfo}>\n           <div\n              className={classes.seatInfoLabel}\n              style={{ background: 'rgb(120, 205, 4)' }}></div>\n              Selected Seat\n          </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default SeatsView","import React, {useState} from 'react'\nimport { Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setCurrentlySelectedCinema, setCurrentlySelectedScreeningTime } from '../../../store/actions/reservationProcessActions'\nconst moment = require('moment')\n\nconst BookMovieForm = ( { classes, selectedMovie }) => {\n  const dispatch = useDispatch()\n  const [selectedCinema, setSelectedCinema] = useState('')\n  const [selectedScreeningTime, setSelectedScreeningTime] = useState('')\n  const handleCinemaChange = (event) => {\n    setSelectedCinema(event.target.value)\n  }\n  const handleScreeningTimeChange = (event) => {\n    setSelectedScreeningTime(event.target.value)\n  }\n  const handleSubmit = () => {\n    dispatch(setCurrentlySelectedCinema(selectedCinema))\n    dispatch(setCurrentlySelectedScreeningTime(selectedScreeningTime))\n  }\n  return (\n    <>\n      <h1>\n        Book a movie reservation\n      </h1>\n      <form className={classes.form}>\n\n        <FormControl id=\"cinemaSelector\" className={classes.formControl}>\n          <InputLabel id=\"cinemaLabel\">{selectedMovie.cinemas.length == 0 ? \"No cinemas available\" : \"Cinema:\"}</InputLabel>\n          <Select\n            labelId=\"cinemaLabel\"\n            id=\"cinemaSelect\"\n            value={selectedCinema}\n            disabled={selectedMovie.cinemas.length == 0 ? true : false}\n            onChange={handleCinemaChange}\n          >\n            {selectedMovie.cinemas.map(cinema =>\n              <MenuItem key={cinema.id} value={cinema.id}>{cinema.name}</MenuItem>\n            )}\n          </Select>\n        </FormControl><br></br>\n        <FormControl id=\"screeningTimeSelector\" className={classes.formControl}>\n          <InputLabel id=\"screeningTimeLabel\">{selectedMovie.screeningTimes.length == 0 ? \"No screening times available\" : \"Screening time:\"}</InputLabel>\n          <Select\n            labelId=\"screeningTimeLabel\"\n            id=\"screeningTimeSelect\"\n            value={selectedScreeningTime}\n            disabled={selectedMovie.screeningTimes.length == 0 ? true : false}\n            onChange={handleScreeningTimeChange}\n          >\n            {selectedMovie.screeningTimes.map(screeningTime =>\n            {\n              if (screeningTime.cinema_id == selectedCinema) return (\n                <MenuItem key={screeningTime.id} value={screeningTime.id}>{moment(screeningTime.datetime_start).format('MMMM Do YYYY, HH:mm')}</MenuItem>\n              )\n            } \n            )}\n          </Select>\n        </FormControl>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={selectedMovie.screeningTimes.length == 0 ? true : false}\n          className={classes.formControl}\n          onClick={() => {\n            handleSubmit()\n          }}\n        >\n          Select\n        </Button>\n      </form>\n    </>\n  )\n}\n\nexport default BookMovieForm","import React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport miscService from '../../../services/misc'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { updateTotalPrice } from '../../../store/actions/reservationProcessActions'\n\n\nconst useStyles = makeStyles((theme) => ({\n  formContainer: {\n    width: '50vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center', \n    margin: theme.spacing(1),\n    opacity: 0.9,\n    backgroundBlendMode: 'screen',\n    backgroundColor: 'white',\n  },\n}));\n\nconst ReservationSelectionInfo = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const currentReservation = useSelector(state => state.reservationProcessState.currentReservation); // objekt\n  const selectedSeats = useSelector(state=>state.reservationProcessState.currentReservation.seats)\n  const currentCinemaId = useSelector(state => state.reservationProcessState.selectedCinema) // cinema_id\n  const [ currCinemaTicketPrice, setCurrCinemaTicketPrice ] = useState(0)\n  useEffect(() => {\n    const fetchRequiredData = async () => {\n      setCurrCinemaTicketPrice(await miscService.getCinemaTicketPrice(currentCinemaId)) // ovaj action bu postavil selectedMovie state varijablu\n    }\n    fetchRequiredData()\n    dispatch(updateTotalPrice(document.getElementById(\"totalPrice\").innerHTML))\n  }, [currentCinemaId, selectedSeats])\n  // treba mi ticket price od cinema\n  const filteredSelectedSeats = currentReservation.seats.filter(seat => seat.occupied == 1);\n  // pri svakom updateu od componenta bude se updatal i price, a to bu globally u storeu\n  const totalPrice = filteredSelectedSeats.length * currCinemaTicketPrice\n  return (\n    <>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">No of seats/tickets</TableCell>\n            <TableCell>Total Price</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell align=\"left\" id=\"noOfSeats\">{filteredSelectedSeats.length}</TableCell>\n            <TableCell id=\"totalPrice\">{totalPrice}</TableCell>  \n          </TableRow>      \n        </TableBody>\n      </Table>\n    </>\n  )\n}\n\nexport default ReservationSelectionInfo","// Prvo se odabire cinema, a onda se nakon toga odabire available screening time.\n// Dok lik odabere screening time, generira se popis mjesta za odabrano kino.\n\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { getMovieById } from '../../store/actions/movieActions'\nimport SeatsView from './components/SeatsView'\nimport Paper from '@material-ui/core/Paper';\nimport BookMovieForm from './components/BookMovieForm'\nimport Container from '@material-ui/core/Container';\nimport { setCurrentlySelectedMovie } from '../../store/actions/reservationProcessActions'\nimport ReservationSelectionInfo from './components/ReservationSelectionInfo';\n\n\nconst useStyles = makeStyles((theme) => ({\n  wholePage: {\n    backgroundImage: `url(https://image.tmdb.org/t/p/original/jb6Ju38HmKX0bYHCmAxs8HyNeJ2.jpg)`,\n    backgroundSize: 'cover',\n    width: '100vw',\n    height: '100vh',\n    color: 'white'\n  },\n  title: {\n    color: 'white',\n    fontSize: '3em',\n    textTransform: 'uppercase',\n    width: '70%',\n    marginLeft: '1%'\n  },\n  subtitle: {\n    fontSize: '0.9em',\n    marginLeft: '1%'\n  },\n  summary: {\n    width: '50%',\n    marginLeft: '1%'\n  },\n  ticketsButton: {\n    margin: 'auto',\n    textAlign: 'center',\n\n  },\n  buttonDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: '12%'\n  },\n  formContainer: {\n    width: '50vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center', \n    margin: theme.spacing(1),\n    opacity: 0.9,\n    backgroundBlendMode: 'screen',\n    backgroundColor: 'white',\n  },\n  form: {\n  },\n  formControl: {\n    display: 'block',\n    margin: theme.spacing(1),\n    minWidth: '100%'\n  },\n  bookMovieFormContainer: {\n    display: 'flex',\n    width: '90%',\n    justifyContent: 'center'\n  }\n}));\n\n\nconst BookMoviePage = (props) => {\n  // film je u parametru id\n  const selectedMovieId = props.match.params.id;\n  \n  console.log(selectedMovieId)\n  const dispatch = useDispatch();\n  const [isBusy, setIsBusy] = useState(true);\n  const classes = useStyles();\n  const selectedMovie = useSelector(state => state.movieState.selectedMovie)\n  dispatch(setCurrentlySelectedMovie(selectedMovieId))\n  const selectedCinema = useSelector(state => state.reservationProcessState.selectedCinema)\n  const selectedScreeningTime = useSelector(state => state.reservationProcessState.currentReservation.screeningTime_id)\n  useEffect(() => {\n    const fetchRequiredData = async () => {\n      await dispatch(getMovieById(selectedMovieId)) // ovaj action bu postavil selectedMovie state varijablu\n      setIsBusy(false)\n    }\n    fetchRequiredData()\n  }, [])\n  const randomBackdropImage = {\n    backgroundImage: `url(${selectedMovie != null && selectedMovie.backdropImage})`\n  }\n\n\n  if (isBusy) {\n    return null\n  } else return (\n    <div className={classes.wholePage} style={randomBackdropImage}>\n      <Typography component=\"h1\" className={classes.title}>\n        {selectedMovie.title}\n      </Typography>\n      <Typography component=\"h4\" className={classes.subtitle}>\n        Released on {new Date(selectedMovie.releaseDate).toDateString()}\n      </Typography>\n      <Typography component=\"h5\" className={classes.subtitle}>\n        <b>Actors: {selectedMovie.actors}</b>\n      </Typography>\n      <Typography component=\"h6\" className={classes.subtitle}>\n        <b>{selectedMovie.genre.toLowerCase()}</b>\n      </Typography>\n      <Typography component=\"h6\" className={classes.summary}>\n        {selectedMovie.summary}\n      </Typography>\n      <Container fixed className={classes.bookMovieFormContainer}>\n        <Paper elevation={3} className={classes.formContainer}>\n          {selectedMovie != null && <BookMovieForm \n            classes={classes} \n            selectedMovie={selectedMovie} \n          /> }\n        </Paper>\n        { selectedScreeningTime != null && \n          <Paper elevation={3} className={classes.formContainer}>\n            <ReservationSelectionInfo /> \n          </Paper> \n        }\n      </Container>\n      { selectedCinema != null && <SeatsView selectedScreeningTime={selectedScreeningTime} /> } {/* ako smo odabrali parametre, mozemo renderirati seatsview */}\n      \n    </div>\n  )\n}\n\nexport default BookMoviePage","import { Parallax } from 'react-parallax';\nimport React, { useEffect } from 'react'\nimport { getMovies } from '../../store/actions/movieActions'\nimport { Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport { Button } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formContainer: {\n    width: '60vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: theme.spacing(1),\n    opacity: 0.9,\n    padding: '1%',\n    backgroundBlendMode: 'screen',\n    backgroundColor: 'white',\n  },\n  ticketsButton: {\n    opacity: 1,\n  },\n}));\n\n\n\nconst MoviesPage = () => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  // trebam dohvatiti listu movieja\n  useEffect(() => {\n    dispatch(getMovies())\n  },[])\n  const allMovies = useSelector(state => state.movieState.movies)\n  const loggedUser = useSelector(state => state.authenticationState.loggedUser)\n  return (\n    <div>\n      {allMovies.map(movie => {\n        return (\n          <Parallax\n            key={movie.id}\n            bgImage={`${movie.backdropImage}`}\n            bgImageAlt=\"movie backdrop image\"\n            strength={200}\n          >\n            <Paper elevation={3} className={classes.formContainer}>\n              <Typography component=\"h1\">\n                <b>{movie.title}</b>\n              </Typography>\n              <Typography component=\"h4\">\n                Released on {new Date(movie.releaseDate).toDateString()}\n              </Typography>\n              <Typography component=\"h5\">\n                Actors: {movie.actors}\n              </Typography>\n              <Typography component=\"h6\">\n                Genres: {movie.genre.toLowerCase()}\n              </Typography>\n              <Rating readOnly={true} defaultValue={movie.rating} max={10} />\n              <Typography component=\"h6\">\n                {movie.summary}\n              </Typography>\n              <Link to={`/movie/book/${movie.id}`} style={loggedUser == null ? {pointerEvents: 'none'} : null}>\n                <Button type=\"button\" disabled={loggedUser == null ? true : false} variant=\"contained\" color=\"primary\" className={classes.ticketsButton}>\n                  {loggedUser == null ? \"Log in to make a reservation\" : \"Buy tickets\"}\n                </Button>\n              </Link>\n            </Paper>\n\n            {/* Put some text content here - even an empty div with fixed dimensions to have a height\n            for the parallax. */}\n            <div style={{ height: '80vh' }} />\n          </Parallax>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default MoviesPage","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MUIDataTable from \"mui-datatables\";\nimport Rating from '@material-ui/lab/Rating';\nimport reservationService from '../../../services/reservations'\nimport { rateReservation } from '../../../store/actions/reservationsActions'\nimport { useDispatch } from 'react-redux'\n\nconst moment = require('moment')\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst ReservationsTable = ({ reservations }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const columns = [\"Movie\", \"Cinema\", \"Seats\", \"Starts at\", \"Ends at\", \"Total price\", {\n    name: \"Rate movie\",\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: (dataIndex) => {\n        return (\n          <Rating \n            defaultValue={reservations[dataIndex].ownRating ? reservations[dataIndex].ownRating : 0} \n            readOnly={reservations[dataIndex].ownRating ? true : false}\n            max={5}\n            name={reservations[dataIndex].id}\n            onChange={ async (event, value) => {\n              // tu bum rateal\n              dispatch(rateReservation(reservations[dataIndex].id, value))\n            }}\n          />\n        );\n      }\n    }\n  },];\n  const data = []\n  reservations.map(reservation => {\n    console.log(reservation)\n    \n    let seatsString = reservation.seats.map(seat => seat.seat_name).join(\", \");\n    data.push([reservation.screeningTime_id.movie_id.title, reservation.screeningTime_id.cinema_id.name, seatsString,\n      moment(reservation.screeningTime_id.datetime_start).format('MMMM Do YYYY, HH:mm'),\n      moment(reservation.screeningTime_id.datetime_end).format('MMMM Do YYYY, HH:mm'),\n      `$${reservation.totalPrice}`])\n  })\n  console.log(data)\n  const options = {\n    filterType: 'checkbox',\n    selectableRows: 'none',\n    downloadOptions: {\n      filename: 'MyReservations.csv',\n      separator: ';'\n    }\n  };\n  return (\n    <MUIDataTable\n      title={\"My reservations\"}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nexport default ReservationsTable","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getReservationsForUser } from '../../store/actions/reservationsActions'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport ReservationsTable from './components/ReservationsTable'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  Paper: {\n    height: 'fit-content'\n  },\n}));\n\n\nconst MyReservationsPage = () => {\n  const dispatch = useDispatch()\n  // fetch screening times\n const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  let reservations = useSelector(state => state.reservationsState.reservationsForUser)\n  let loggedUserId = useSelector(state => state.authenticationState.loggedUser.id)\n  useEffect(() => {\n     dispatch(getReservationsForUser(loggedUserId))\n  }, []) // load cinemas \n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={12} lg={12}>\n        <Paper className={`${fixedHeightPaper} ${classes.Paper}`}>\n        <ReservationsTable reservations={reservations} />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default MyReservationsPage","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\"\nimport PrivateRoute from './components/PrivateRoute'\nimport PrivateRouteAdmin from './components/PrivateRouteAdmin'\nimport Login from './pages/login'\nimport Register from './pages/register'\nimport Dashboard from './pages/adminOnly/dashboard/index'\nimport DashboardUser from './pages/dashboardUser/index'\nimport Navbar from './pages/layout/Navbar'\nimport CinemasView from './pages/adminOnly/dashboard/components/CinemasView'\nimport MainView from './pages/adminOnly/dashboard/components/MainView'\nimport MoviesView from './pages/adminOnly/dashboard/components/MoviesView'\nimport HomePage from './pages/homePage/HomePage'\nimport ScreeningTimesView from './pages/adminOnly/dashboard/components/ScreeningTimesView'\nimport StatisticsView from './pages/adminOnly/dashboard/components/StatisticsView'\nimport ReservationsView from './pages/adminOnly/dashboard/components/ReservationsView'\nimport BookMoviePage from './pages/bookMoviePage/index'\nimport MoviesPage from './pages/moviesPage/index'\nimport MyReservationsPage from './pages/MyReservationsPage/index'\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:3001\";\nlet socket = socketIOClient(ENDPOINT)\n\nconst App = () => {\n  console.log(\"socket is \", socket)\n  const handleSendMessage = (message) => {\n    socket.emit(\"sendMsgToServer\", {message: message});\n  }\n  socket.on(\"sendMsgToClient\", (message) => {\n    addResponseMessage(message.message.message)\n  })\n  return (\n    <div>\n    <Router>\n      <Navbar />\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <PrivateRouteAdmin path=\"/admin/dashboard\">\n          <Dashboard>\n            <MainView />\n          </Dashboard>\n        </PrivateRouteAdmin>\n        <PrivateRouteAdmin path=\"/admin/cinemas\">\n          <Dashboard>\n            <CinemasView />\n          </Dashboard>\n        </PrivateRouteAdmin>\n        <PrivateRouteAdmin path=\"/admin/movies\">\n          <Dashboard>\n            <MoviesView />\n          </Dashboard>\n        </PrivateRouteAdmin>\n        <PrivateRouteAdmin path=\"/admin/screeningtimes\">\n          <Dashboard>\n            <ScreeningTimesView />\n          </Dashboard>\n        </PrivateRouteAdmin>\n        <PrivateRouteAdmin path=\"/admin/reservations\">\n          <Dashboard>\n            <ReservationsView />\n          </Dashboard>\n        </PrivateRouteAdmin>\n        <PrivateRouteAdmin path=\"/admin/statistics\">\n          <Dashboard>\n            <StatisticsView />\n          </Dashboard>\n        </PrivateRouteAdmin>\n        <PrivateRoute path=\"/user/dashboard\" component={DashboardUser} />\n        <PrivateRoute path=\"/user/reservations\" component={MyReservationsPage} />\n        <Route path=\"/movies\" component={MoviesPage} />\n        <PrivateRoute path=\"/movie/book/:id\" component={BookMoviePage}>\n        </PrivateRoute>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n    {/* Svugdje prikazi chat widget*/}\n    <Widget\n      title=\"Cinema Chat\"\n      subtitle=\"Chat with fellow users here! :)\"\n      senderPlaceHolder=\"Hey, do you have a movie recommendation for me?\"\n      handleNewUserMessage={handleSendMessage}\n      profileAvatar=\"https://cdn2.iconfinder.com/data/icons/circular-icons-line/82/Circular_Person-512.png\"\n    />\n    </div>\n  )\n}\n\nexport default App","\nconst initialState = {\n  loggedUser: null,\n  token: localStorage.getItem('userToken')\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'LOGIN_SUCCESS':\n      console.log(action.payload)\n      // set token and user \n      localStorage.setItem('userToken', action.payload.token)\n      localStorage.setItem('loggedUser', JSON.stringify(action.payload.user))\n      return {...state, loggedUser: action.payload.user, token: action.payload.token}\n    case 'SET_ACTIVE_USER':\n      return {...state, loggedUser: action.payload }\n    case 'LOGIN_FAIL':\n    case 'LOGOUT':\n      state = { ...state, loggedUser: null, token: null}\n      return initialState;\n    default:\n      return state\n  }\n}\n\nexport default authReducer","\n\nconst initialState = {\n  cinemas: [],\n  availableCinemas: [], // za korištenje u booking pageu\n}; // initial state su prazni cinemas\n\nconst cinemaReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_CINEMAS':\n    case 'GET_AVAILABLE_CINEMAS':\n      // od actiona bum dobil cinemas i tu bum ih onda v state postavil\n      state = { ...state, cinemas: action.payload }\n      return state\n    case 'ADD_NEW_CINEMA':\n      state = { ...state, cinemas: [...state.cinemas.concat(action.payload)] }\n      return state\n    default:\n      return state\n  }\n}\n\nexport default cinemaReducer","/* eslint-disable no-fallthrough */\n\nconst initialState = {\n  movies: [], // za prikaz u admin dashboardu\n  selectedMovie: null, // film oko kojeg se trenutno flow vrti\n}\n\nconst movieReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_MOVIES':\n      state = { ...state, movies: action.payload }\n      return state\n    case 'GET_MOVIE_BY_ID':\n      state = { ...state, selectedMovie: action.payload}\n      return state\n    case 'ADD_NEW_MOVIE':\n      state = { ...state, movies: [...state.movies.concat(action.payload)] }\n      return state\n    default:\n      return state\n  }\n}\n\nexport default movieReducer","\nconst initialState = {\n  screening_times: [], // za prikaz u admin dashboardu\n  availableScreeningTimes: [],\n}\n\nconst screeningTimeReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_SCREENING_TIMES':\n    case 'GET_AVAILABLE_SCREENING_TIMES':\n      state = { ...state, screening_times: action.payload }\n      return state\n    default:\n      return state\n  }\n}\n\nexport default screeningTimeReducer","\nconst initialState = {\n  seatsForSelectedScreeningTime: [], // tu dohvaćamo sjedala za odabrano kino\n  selectedCinema: null,\n  selectedMovie: null,\n  currentReservation: {\n    screeningTime_id: null,\n    user_id: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')).id : null,\n    seats: [],\n    totalPrice: 0,\n  }, // objekt koji drzi informacije o rezervaciji\n}\n\nconst reservationProcessReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_SEATS_FOR_SELECTED_SCREENING_TIME':\n    case 'SET_OCCUPIED_SEATS':\n      state = { ...state, seatsForSelectedScreeningTime: action.payload }\n      return state\n    case 'SET_PICKED_SEATS':\n      state = { ...state, currentReservation: {...state.currentReservation, seats: action.payload } }\n      return state\n    case 'SET_SELECTED_CINEMA':\n      state = { ...state, selectedCinema: action.payload }\n      return state\n    case 'SET_SELECTED_SCREENING_TIME': \n      state = { ...state, currentReservation: {...state.currentReservation, screeningTime_id: action.payload } }\n      return state\n    case 'SET_SELECTED_MOVIE': \n      state = { ...state, selectedMovie: action.payload }\n      return state\n    case 'UPDATE_TOTAL_PRICE':\n      state = { ...state, currentReservation: {...state.currentReservation, totalPrice: action.payload } }\n      return state\n    case 'SET_ORDER_ID':\n      state = { ...state, currentReservation: {...state.currentReservation, paypalOrderId: action.payload } }\n      return state\n    default:\n      return state\n  }\n}\n\nexport default reservationProcessReducer","/* eslint-disable no-duplicate-case */\n/* eslint-disable no-fallthrough */\n\nconst initialState = {\n  reservations: [], // sve rezervacije\n  reservationsForUser: [],\n}\n\nconst reservationReducer = (state = initialState, action) => {\n  console.log(\"action payload\", action.payload)\n  switch(action.type) {\n    case 'GET_RESERVATIONS':\n      state = { ...state, reservations: action.payload }\n      return state\n    case 'GET_RESERVATIONS_FOR_USER':\n      state = { ...state, reservationsForUser: action.payload }\n      return state\n    case 'RATE_RESERVATION':\n      state = { ...state, reservationsForUser: state.reservationsForUser.map(reservation => action.payload.id == reservation.id ? action.payload : reservation )}\n      console.log(\"new state\", state)\n      return state\n    default:\n      return state\n  }\n}\n\nexport default reservationReducer","\nconst initialState = {\n  chat_messages: []\n}\n\nconst chatReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'ADD_MESSAGE':\n      state = { ...state, chat_messages: [...state.chat_messages, action.payload]}\n      return state\n    default:\n      return state\n  }\n}\n\nexport default chatReducer","import authReducer from './authReducer'\nimport cinemaReducer from './cinemaReducer'\nimport { combineReducers } from 'redux';\nimport movieReducer from './movieReducer';\nimport screeningTimeReducer from './screeningTimeReducer'\nimport reservationProcessReducer from './reservationProcessReducer';\nimport reservationReducer from './reservationReducer';\nimport chatReducer from './chatReducer'\n\nconst combinedReducer = combineReducers({\n  authenticationState: authReducer,\n  cinemaState: cinemaReducer,\n  movieState: movieReducer,\n  screeningTimeState: screeningTimeReducer,\n  reservationProcessState: reservationProcessReducer,\n  reservationsState: reservationReducer,\n  chatState: chatReducer\n});\n\nexport default combinedReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport combinedReducer from './reducers/combinedReducer'\n \n\nconst store = createStore(combinedReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/index'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}